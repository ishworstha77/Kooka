// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  role      String  @default("customer")
  cartItems CartItem[]
  sales     Sales[]
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  description  String?
  price        Float
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  isActive     Boolean       @default(true)
  images       String[]
  totalSales   Int           @default(0)
  productViews ProductView[]
  cartItems    CartItem[]
  sales        Sales[]
}

model CartItem {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  productItem Product  @relation(fields: [productId], references: [id])
  productId   Int
  quantity    Int      @default(1)
  createdAt   DateTime @default(now())
}

model ProductView {
  id        Int     @id @default(autoincrement())
  productId Int     @unique
  noOfViews Int     @default(0)
  product   Product @relation(fields: [productId], references: [id])
}

model Sales{
  id Int @id @default(autoincrement())
  productItem Product  @relation(fields: [productId], references: [id])
  productId   Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  quantity    Int @default(1)
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
